<Window x:Class="Cs_Notas.Windows.Escritura.AdicionarItensCustas"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Adicionar Itens Custas" Height="500" Width="666" ResizeMode="NoResize" Icon="/Cs_Notas;component/Imagens/Notas.ico" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" WindowStyle="None" ShowActivated="False" Loaded="Window_Loaded" PreviewKeyDown="Window_PreviewKeyDown">
    <Grid Background="#FF1392C1">
        <Grid Background="#FFA3FFFF" UseLayoutRounding="False" Height="480" VerticalAlignment="Top" Margin="10,10,10,0">
            <Label Name="lblDescricao" Content="Itens Custas" VerticalAlignment="Top" HorizontalContentAlignment="Center" Foreground="#FF200BF5" Background="#FF00FFE8" Margin="0,238,0,0" Height="169" FontSize="20" />
            <Button x:Name="btnOk" TabIndex="6" Padding="0" BorderThickness="0" Cursor="Hand" ToolTip="Ok" Margin="554,412,0,0" HorizontalAlignment="Left" Width="82" Click="btnOk_Click" Height="62" VerticalAlignment="Top" RenderTransformOrigin="0.495,0.118">
                <Button.Background>
                    <ImageBrush/>
                </Button.Background>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <TextBlock  Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="0" Height="47" Width="53">
                            <TextBlock.Background>
                                <ImageBrush ImageSource="/Cs_Notas;component/Imagens/check_24016.png"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property ="IsMouseOver" Value="True">
                                            <Setter Property= "Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <DataGrid AutoGenerateColumns="False" TabIndex="4" Cursor="Hand" AlternationCount="2" RowBackground="White" AlternatingRowBackground="#FF6BE0EC" IsReadOnly="True" x:Name="dataGridTabelaCustas" AllowDrop="False" CanUserResizeRows="False" SelectionUnit="FullRow" GridLinesVisibility="None" ClipboardCopyMode="ExcludeHeader" HorizontalScrollBarVisibility="Auto" UseLayoutRounding="True" Background="{x:Null}" IsTabStop="True"  Margin="10,73,10,0" PreviewKeyDown="dataGridTabelaCustas_PreviewKeyDown" SelectionChanged="dataGridTabelaCustas_SelectionChanged" HeadersVisibility="Column" SelectionMode="Single" Height="160" VerticalAlignment="Top" >
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <EventSetter Event="Control.MouseDoubleClick" Handler="dataGridTabelaCustas_MouseDoubleClick"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF0086FF" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Width="70" Binding="{Binding TabelaCustasId}" CanUserResize="False" Visibility="Hidden"/>
                    <DataGridTextColumn Header="Tabela" Width="55" Binding="{Binding Tabela}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Item" Width="55" Binding="{Binding Item}" CanUserResize="False"/>
                    <DataGridTextColumn Header="SubItem" Width="55" Binding="{Binding SubItem}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Descrição" Width="350" Binding="{Binding Descricao}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Valor" Width="90" Binding="{Binding Valor, StringFormat=\{0:n2\}}" CanUserResize="False"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBox x:Name="txtTabela" TabIndex="1" HorizontalAlignment="Left" CharacterCasing="Upper" MaxLength="4" Height="28" Margin="10,31,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75" FontSize="16" TextChanged="txtTabela_TextChanged" PreviewKeyDown="txtTabela_PreviewKeyDown"/>
            <TextBox x:Name="txtItem" TabIndex="2" HorizontalAlignment="Left" MaxLength="4" CharacterCasing="Upper" Height="28" Margin="103,31,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75" FontSize="16" TextChanged="txtItem_TextChanged" PreviewKeyDown="txtItem_PreviewKeyDown"/>
            <Label Content="Tabela:" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" Width="75"/>
            <Label Content="Item:" HorizontalAlignment="Left" Margin="103,5,0,0" VerticalAlignment="Top" Width="75"/>
            <TextBox x:Name="txtSubitem" TabIndex="3" HorizontalAlignment="Left" CharacterCasing="Upper" MaxLength="4" Height="28" Margin="195,31,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75" FontSize="16" TextChanged="txtSubitem_TextChanged" PreviewKeyDown="txtSubitem_PreviewKeyDown"/>
            <Label Content="Subitem:" HorizontalAlignment="Left" Margin="195,5,0,0" VerticalAlignment="Top" Width="75"/>
            <DataGrid AutoGenerateColumns="False" TabIndex="5" Cursor="Hand" CanUserSortColumns="False" AlternationCount="2" RowBackground="White" AlternatingRowBackground="#FF6BE0EC" IsReadOnly="True" x:Name="dataGridCustas" AllowDrop="False" CanUserResizeRows="False" SelectionUnit="FullRow" GridLinesVisibility="None" ClipboardCopyMode="ExcludeHeader" HorizontalScrollBarVisibility="Auto" UseLayoutRounding="True" Background="{x:Null}" IsTabStop="True"  Margin="10,278,10,0" PreviewKeyDown="dataGridCustas_PreviewKeyDown" SelectionChanged="dataGridCustas_SelectionChanged" HeadersVisibility="Column" SelectionMode="Single" Height="129" VerticalAlignment="Top">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <EventSetter Event="Control.MouseDoubleClick" Handler="dataGridCustas_MouseDoubleClick"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF0086FF" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Width="70" Binding="{Binding TabelaCustasId}" CanUserResize="False" Visibility="Hidden"/>
                    <DataGridTextColumn Header="Tabela" Width="55" Binding="{Binding Tabela}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Item" Width="55" Binding="{Binding Item}" CanUserResize="False"/>
                    <DataGridTextColumn Header="SubItem" Width="55" Binding="{Binding SubItem}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Descrição" Width="275" Binding="{Binding Descricao}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Qtd" Width="40" Binding="{Binding Quantidade}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Valor" Width="70" Binding="{Binding Valor, StringFormat=\{0:n2\}}" CanUserResize="False"/>
                    <DataGridTextColumn Header="Total" Width="70" Binding="{Binding Total, StringFormat=\{0:n2\}}" CanUserResize="False"/>
                </DataGrid.Columns>
            </DataGrid>
            <GroupBox Header="Custas" HorizontalAlignment="Left" Margin="538,0,0,0" VerticalAlignment="Top" Height="59" Width="98" Foreground="Black" BorderBrush="#FFC3CFDA">
                <Grid Margin="0,0,-2,0">
                    <TextBox x:Name="cmbAnoCustas" IsReadOnly="True" TabIndex="16" Foreground="Black" FontSize="20" Margin="0,0,3,0"/>

                </Grid>
            </GroupBox>

        </Grid>
    </Grid>
    <Window.Resources>
        <Style x:Key="columnHeaderStyle"
             TargetType="DataGridColumnHeader">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0"
                         EndPoint="0.5,1" >
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FF3AEAEA" Offset="0" />
                            <GradientStop Color="#FF515151" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="ComboBox" x:Key="Flat_ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightSkyBlue" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
  x:Name="Border" 
  Grid.ColumnSpan="2"
  CornerRadius="2"
  Background="#FF72A8A3"
  BorderBrush="#404040"
  BorderThickness="1" />
                <Border 
  Grid.Column="0"
  CornerRadius="2,0,0,2" 
  Margin="1" 
  Background="#FFFFFF" 
  BorderBrush="#404040"
  BorderThickness="0,0,1,0" />
                <Path 
  x:Name="Arrow"
  Grid.Column="1"     
  Fill="#404040"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
        Name="ToggleButton" 
        Template="{StaticResource ComboBoxToggleButton}" 
        Grid.Column="2" 
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
        Name="ContentSite"
        IsHitTestVisible="False" 
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        Margin="3,3,23,3"
        VerticalAlignment="Center"
        HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
        Style="{x:Null}" 
        Template="{StaticResource ComboBoxTextBox}" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Center" 
        Margin="3,3,23,3"
        Focusable="True" 
        Background="Transparent"
        Visibility="Hidden"
        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Slide">
                                <Grid 
          Name="DropDown"
          SnapsToDevicePixels="True"                
          MinWidth="{TemplateBinding ActualWidth}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
            x:Name="DropDownBorder"
            Background="#FFFFFF"
            BorderThickness="1"
            BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
           Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
      Name="Border"
      Padding="2"
      SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>
