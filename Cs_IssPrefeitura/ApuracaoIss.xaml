<Window x:Class="Cs_IssPrefeitura.ApuracaoIss"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Apuração e Fechamento do Iss" Height="624.5" Width="958" ResizeMode="NoResize" WindowState="Normal" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" Icon="Logo Iss.ico" Background="#FFE9FFFD" Loaded="Window_Loaded">
    <Grid>
        <TabControl Height="370" Margin="10,110,10,0" VerticalAlignment="Top" Background="#FFC6F9B7">
            <TabItem Header="Meses Fechados">
                <Grid Background="#FFE5E5E5">
                    <DataGrid AutoGenerateColumns="False" AlternationCount="2" RowBackground="White" AlternatingRowBackground="#FF8DE1FF" IsReadOnly="True" SelectionMode="Single" x:Name="dataGridMesesfechados" AllowDrop="False" HeadersVisibility="All" CanUserResizeRows="False" SelectionUnit="FullRow" GridLinesVisibility="None" ClipboardCopyMode="ExcludeHeader" HorizontalScrollBarVisibility="Auto" UseLayoutRounding="True" Background="{x:Null}" IsTabStop="True" SelectionChanged="dataGridMesesfechados_SelectionChanged" SelectedCellsChanged="dataGridMesesfechados_SelectedCellsChanged" BorderBrush="{x:Null}">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF0086FF" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="AtoId" Width="50" Binding="{Binding ApuracaoIssId}" CanUserResize="False" Visibility="Hidden"/>
                            <DataGridTextColumn Header="Data Fechamento" Width="80" Binding="{Binding DataFechamento, StringFormat=dd/MM/yyyy}" CanUserResize="False"/>
                            <DataGridTextColumn Header="Mês" Width="80" Binding="{Binding NomeMes}" CanUserResize="False"/>
                            <DataGridTextColumn Header="Ano" Width="60" Binding="{Binding Ano}" CanUserResize="False" />
                            <DataGridTextColumn Header="Livro" Width="40" Binding="{Binding Livro, StringFormat=\{0:000\}}" CanUserResize="False"/>
                            <DataGridTextColumn Header="Folha" Width="50" Binding="{Binding Folha, StringFormat=\{0:000\}}" CanUserResize="False"/>
                            <DataGridTextColumn Header="Recibo" Width="50" Binding="{Binding Recibo}" CanUserResize="False" />
                            <DataGridTextColumn Header="Série" Width="55" Binding="{Binding Serie, StringFormat=\{0:00\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Número" Width="55" Binding="{Binding Numero, StringFormat=\{0:00000\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Faturamento" Width="80" Binding="{Binding Faturamento, StringFormat=\{0:n2\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Fundos Especiais" Width="100" Binding="{Binding FundosEspeciais, StringFormat=\{0:n2\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Base de Cálculo" Width="98" Binding="{Binding BaseCalculo, StringFormat=\{0:n2\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Alíquota" Width="55" Binding="{Binding Aliquota, StringFormat=\{0:n2\}}" CanUserResize="False" />
                            <DataGridTextColumn Header="Valor Iss Recolhido" Width="110" Binding="{Binding ValorIssRecolhido, StringFormat=\{0:n2\}}" CanUserResize="False"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <!--<TabItem Header="TabItem">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>-->
        </TabControl>
        <Grid Height="95" Margin="10,10,10,0" VerticalAlignment="Top" Background="#FFE5FDD9">
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="11*"/>
            </Grid.RowDefinitions>
            <Button x:Name="btnCancelarApuracao" IsEnabled="False" Padding="0" BorderThickness="0" Cursor="Hand" ToolTip="Cancelar Apuração" RenderTransformOrigin="-0.357,0.569" Margin="805,10,0,0" Click="btnCancelarApuracao_Click" HorizontalAlignment="Left" Width="108" Height="60" VerticalAlignment="Top" Grid.RowSpan="2">
                <Button.Background>
                    <ImageBrush/>
                </Button.Background>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="0" Height="40" Width="69">
                            <TextBlock.Background>
                                <ImageBrush ImageSource="Imagens/ExcluirRegistro.png"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property ="IsMouseOver" Value="True">
                                            <Setter Property= "Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Label Content="Cancelar Apuração" HorizontalAlignment="Left" Margin="805,29,0,0" VerticalAlignment="Top" Width="117" Grid.Row="1"/>
            <GroupBox Header="Consulta de Apuração Fechada" Margin="0,0,534,0" VerticalAlignment="Top" Height="95" Grid.RowSpan="2">
                <Grid Margin="0,-10,-2,3">
                    <ComboBox x:Name="cmbTipoConsulta"  TabIndex="0" HorizontalAlignment="Left" Margin="10,37,0,0" Width="131" Height="24" VerticalAlignment="Top" Background="{x:Null}" PreviewKeyDown="cmbAtribuicao_PreviewKeyDown" SelectionChanged="cmbTipoConsulta_SelectionChanged"/>
                    <Label Content="Tipo de Consulta:" HorizontalAlignment="Left" Margin="10,11,0,0" VerticalAlignment="Top" Width="131"/>
                    <ComboBox x:Name="cmbDadoConsulta"  TabIndex="0" HorizontalAlignment="Left" Margin="164,37,0,0" Width="110" Height="24" VerticalAlignment="Top" Background="{x:Null}" PreviewKeyDown="cmbAtribuicao_PreviewKeyDown" SelectionChanged="cmbDadoConsulta_SelectionChanged" />
                    <Label Content="Informação:" x:Name="lblInformacao" HorizontalAlignment="Left" Margin="164,11,0,0" VerticalAlignment="Top" Width="83"/>
                    <Button x:Name="btnConsultar" IsEnabled="False" Padding="0" BorderThickness="0" Cursor="Hand" ToolTip="Consultar" RenderTransformOrigin="-0.357,0.569" Margin="294,24,0,10" Click="btnConsultar_Click" HorizontalAlignment="Left" Width="80">
                        <Button.Background>
                            <ImageBrush/>
                        </Button.Background>
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="0" Height="40" Width="52">
                                    <TextBlock.Background>
                                        <ImageBrush ImageSource="Imagens/Lupa grande.png"/>
                                    </TextBlock.Background>
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <Trigger Property ="IsMouseOver" Value="True">
                                                    <Setter Property= "Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </Grid>
            </GroupBox>
            <Button x:Name="btnImprimirFechamento" IsEnabled="False" Padding="0" BorderThickness="0" Cursor="Hand" ToolTip="Imprimir Fechamento" RenderTransformOrigin="-0.357,0.569" Margin="652,10,0,0" Click="btnImprimirFechamento_Click" HorizontalAlignment="Left" Width="108" Height="60" VerticalAlignment="Top" Grid.RowSpan="2">
                <Button.Background>
                    <ImageBrush/>
                </Button.Background>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="0" Height="40" Width="69">
                            <TextBlock.Background>
                                <ImageBrush ImageSource="Imagens/ImprimirLivroAuxiliar.png"/>
                            </TextBlock.Background>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property ="IsMouseOver" Value="True">
                                            <Setter Property= "Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Label Content="Imprimir Fechamento" HorizontalAlignment="Left" Margin="644,29,0,0" VerticalAlignment="Top" Width="128" Grid.Row="1"/>

        </Grid>
        <Grid Height="89" Margin="10,492,10,0" VerticalAlignment="Top" Background="#FFF1EFB3">
            <GroupBox Header="Fechamento de Mês do ISS" Margin="0,-2,0,2">
                <Grid Margin="0,-10,-2,0" Height="80" VerticalAlignment="Top">
                    <ComboBox x:Name="cmbMesFechamento"  TabIndex="0" HorizontalAlignment="Left" Margin="10,37,0,0" Width="173" Height="24" VerticalAlignment="Top" Background="{x:Null}" SelectionChanged="cmbMesFechamento_SelectionChanged"/>
                    <Label Content="Mês de Fechamento:" HorizontalAlignment="Left" Margin="10,11,0,0" VerticalAlignment="Top" Width="131"/>
                    <ComboBox x:Name="cmbAnoFechamento" IsEnabled ="False" TabIndex="0" HorizontalAlignment="Left" Margin="235,37,0,0" Width="116" Height="24" VerticalAlignment="Top" Background="{x:Null}" SelectionChanged="cmbAnoFechamento_SelectionChanged"  />
                    <Label Content="Ano:" x:Name="lblAno" HorizontalAlignment="Left" Margin="235,11,0,0" VerticalAlignment="Top" Width="83"/>
                    <Button x:Name="btnFecharMes" IsEnabled ="False" Padding="0" BorderThickness="0" Cursor="Hand" ToolTip="Fechar Mês Selecionado" RenderTransformOrigin="-0.357,0.569" Margin="792,24,0,10" Click="btnFecharMes_Click" HorizontalAlignment="Left" Width="80">
                        <Button.Background>
                            <ImageBrush/>
                        </Button.Background>
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="0" Height="40" Width="52">
                                    <TextBlock.Background>
                                        <ImageBrush ImageSource="Imagens/Sincronizar.png"/>
                                    </TextBlock.Background>
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <Trigger Property ="IsMouseOver" Value="True">
                                                    <Setter Property= "Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                    <DatePicker x:Name="dpConsultaInicio" IsEnabled="False" Margin="408,37,0,19"  HorizontalAlignment="Left" Width="106" SelectedDateChanged="dpConsultaInicio_SelectedDateChanged" />
                    <DatePicker x:Name="dpConsultaFim" IsEnabled="False" Margin="622,37,0,19" HorizontalAlignment="Left" Width="106" SelectedDateChanged="dpConsultaFim_SelectedDateChanged"/>
                    <Label Content="Data Final:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="622,11,0,0"/>
                    <Label Content="Data Inicial:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="408,11,0,0"/>
                    <Label Content="ATÉ" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="552,35,0,0"/>
                </Grid>
            </GroupBox>
        </Grid>

    </Grid>

    <Window.Resources>
        <Style TargetType="ComboBox" x:Key="Flat_ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="White" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightSkyBlue" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
  x:Name="Border" 
  Grid.ColumnSpan="2"
  CornerRadius="2"
  Background="#FF72A8A3"
  BorderBrush="#404040"
  BorderThickness="1" />
                <Border 
  Grid.Column="0"
  CornerRadius="2,0,0,2" 
  Margin="1" 
  Background="#FFFFFF" 
  BorderBrush="#404040"
  BorderThickness="0,0,1,0" />
                <Path 
  x:Name="Arrow"
  Grid.Column="1"     
  Fill="#404040"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
        Name="ToggleButton" 
        Template="{StaticResource ComboBoxToggleButton}" 
        Grid.Column="2" 
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
        Name="ContentSite"
        IsHitTestVisible="False" 
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        Margin="3,3,23,3"
        VerticalAlignment="Center"
        HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
        Style="{x:Null}" 
        Template="{StaticResource ComboBoxTextBox}" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Center" 
        Margin="3,3,23,3"
        Focusable="True" 
        Background="Transparent"
        Visibility="Hidden"
        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Slide">
                                <Grid 
          Name="DropDown"
          SnapsToDevicePixels="True"                
          MinWidth="{TemplateBinding ActualWidth}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
            x:Name="DropDownBorder"
            Background="#FFFFFF"
            BorderThickness="1"
            BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
           Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
      Name="Border"
      Padding="2"
      SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
</Window>
